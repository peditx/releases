---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
	const posts = await getCollection('releases');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}

type Props = CollectionEntry<'releases'>;

const post = Astro.props;
const { Content } = await post.render();

// We directly use the scriptContent from the post data.
const scriptContent = post.data.scriptContent;
---
<Layout title={post.data.title}>
	<article class="container mx-auto px-4 sm:px-6 lg:px-8 py-20 max-w-4xl">
		<div class="cyber-card p-8 md:p-12">
			<header class="text-center mb-8">
				<h1 class="text-4xl md:text-5xl font-black font-orbitron text-neon-cyan mb-4">{post.data.title}</h1>
				<p class="text-gray-400">
					{new Date(post.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
				</p>
			</header>

			<!-- FIX: Replaced Astro's <Image> component with a standard <img> tag to avoid build issues with /public folder assets. -->
			{post.data.heroImage && (
				<img
					src={post.data.heroImage}
					alt={`Cover for ${post.data.title}`}
					width={1200}
					height={600}
					class="w-full rounded-lg mb-8 border-2 border-[var(--border-color)]"
				/>
			)}
			
			<div class="prose prose-invert prose-lg max-w-none text-gray-300 prose-headings:text-neon-magenta prose-headings:font-orbitron prose-a:text-neon-cyan hover:prose-a:text-neon-magenta">
				<Content />
			</div>

			<!-- This entire section will only render if scriptContent has a value. -->
			{scriptContent && (
				<div class="mt-12">
					<h3 class="text-2xl font-orbitron text-neon-magenta mb-4">Script</h3>
					<div class="command-box p-4 rounded-md relative text-lg">
						<pre class="overflow-x-auto"><code id="script-code">{scriptContent}</code></pre>
						<button id="copy-button" class="absolute top-3 right-3 text-gray-400 hover:text-white transition-colors" title="Copy Script">
							<i class="fas fa-copy"></i>
						</button>
					</div>
				</div>
			)}
		</div>
	</article>
</Layout>

<script define:vars={{ scriptContent }}>
	// This script only runs if the scriptContent exists, because the elements won't exist otherwise.
	if (scriptContent) {
		const copyButton = document.getElementById('copy-button');
		copyButton.addEventListener('click', () => {
			// Use document.execCommand as a fallback for broader browser compatibility in iframes.
			const textArea = document.createElement('textarea');
			textArea.value = scriptContent;
			document.body.appendChild(textArea);
			textArea.select();
			try {
				document.execCommand('copy');
				copyButton.innerHTML = '<i class="fas fa-check text-green-400"></i>';
				copyButton.setAttribute('title', 'Copied!');
			} catch (err) {
				console.error('Failed to copy text: ', err);
				copyButton.setAttribute('title', 'Error!');
			}
			document.body.removeChild(textArea);

			setTimeout(() => {
				copyButton.innerHTML = '<i class="fas fa-copy"></i>';
				copyButton.setAttribute('title', 'Copy Script');
			}, 2000);
		});
	}
</script>

<style is:global>
.prose h1, .prose h2, .prose h3 { margin-bottom: 0.5em; }
.prose p { margin-bottom: 1em; line-height: 1.7; }
.prose ul { list-style-type: disc; margin-left: 1.5em; margin-bottom: 1em; }
.prose a { text-decoration: underline; }
</style>

